require 'uri'
require 'highline/import'
require 'spreadsheet'
require 'roo'

def write_xls(name, sheets)
  xls = Spreadsheet::Workbook.new
  sheets.each do |title, cells|
    sheet = xls.create_worksheet
    sheet.name = title
    cells.each_with_index do |row, i|
      row.each_with_index do |val, j|
        sheet[i, j] = val
      end
    end
  end

  xls.write name
end

def open_xls(name)
  if name.include?(' ')
    puts "文件名[#{name}]含有空格"
    return
  end
  unless File.exists?(name)
    puts "文件[#{name}]不存在"
    return
  end

  Roo::Spreadsheet.open name
end

namespace :janelia do
  desc 'Janelia Stocks'
  task :stocks do
    xls1= open_xls ask('对照表文件？')
    unless xls1
      next
    end

    xls2= open_xls ask('操作表文件？')
    unless xls2
      next
    end

    ok = ask('确定要继续么？(y/n)') { |q| q.default='n' }
    next unless ok == 'y'


    cells = []

    xls2.sheet(xls2.sheets.first).each do |row2|
      puts "正在处理#{row2[0].to_s}"

      xls1.sheet(xls1.sheets.first).each do |row1|
        if row1[3].to_s.start_with?("P{GM#{row2[0]}")
          cells << [row2[0].to_s, row1[0].to_i]
          break
        end
      end
    end

    write_xls 'tmp/result.xls', {'Sheet 1' => cells}
  end

end

namespace :test do
  desc '测试write xls'
  task :xls_write do
    write_xls 'tmp/test.xls', {
                                'Sheet 1' => [
                                    ['(0, 0)', '(0, 1)'],
                                    ['(1, 0)', '(1, 1)'],
                                    ['(2, 0)', '(2, 1)'],
                                    ['(3, 0)', '(3, 1)'],
                                ],
                                'Sheet 2' => [
                                    ['(0, 0)', '(0, 1)', '(0, 2)'],
                                    ['(1, 0)', '(1, 1)', '(1, 2)'],
                                    ['(2, 0)', '(2, 1)', '(2, 2)'],
                                    ['(3, 0)', '(3, 1)', '(3, 2)'],
                                ]
                            }
  end

end